"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PowertoolsLogFormatter = void 0;
const LogFormatter_js_1 = require("./LogFormatter.js");
const LogItem_js_1 = require("./LogItem.js");
/**
 * This class is used to transform a set of log key-value pairs
 * in the Powertools for AWS Lambda default structure log format.
 *
 * @class
 * @extends {LogFormatter}
 */
class PowertoolsLogFormatter extends LogFormatter_js_1.LogFormatter {
    /**
     * It formats key-value pairs of log attributes.
     *
     * @param {UnformattedAttributes} attributes
     * @param {LogAttributes} additionalLogAttributes
     * @returns {LogItem}
     */
    formatAttributes(attributes, additionalLogAttributes) {
        const baseAttributes = {
            cold_start: attributes.lambdaContext?.coldStart,
            function_arn: attributes.lambdaContext?.invokedFunctionArn,
            function_memory_size: attributes.lambdaContext?.memoryLimitInMB,
            function_name: attributes.lambdaContext?.functionName,
            function_request_id: attributes.lambdaContext?.awsRequestId,
            level: attributes.logLevel,
            message: attributes.message,
            sampling_rate: attributes.sampleRateValue,
            service: attributes.serviceName,
            timestamp: this.formatTimestamp(attributes.timestamp),
            xray_trace_id: attributes.xRayTraceId,
        };
        const powertoolsLogItem = new LogItem_js_1.LogItem({ attributes: baseAttributes });
        powertoolsLogItem.addAttributes(additionalLogAttributes);
        return powertoolsLogItem;
    }
}
exports.PowertoolsLogFormatter = PowertoolsLogFormatter;
